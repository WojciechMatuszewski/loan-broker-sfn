AWSTemplateFormatVersion: "2010-09-09"
Transform:
  - AWS::Serverless-2016-10-31
  - APIGWDeploymentMacro

Globals:
  Function:
    Timeout: 5
    Runtime: go1.x
    Handler: main

Resources:
  DataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        # - AttributeName: sk
        #   AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        # - AttributeName: sk
        #   KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  BanksSeederFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./seed-banks
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource:
                - !Sub ${DataTable.Arn}

  BanksSeederResource:
    Type: AWS::CloudFormation::CustomResource
    DependsOn:
      - DataTable
    Properties:
      ServiceToken: !Sub ${BanksSeederFunction.Arn}
      TableName: !Sub ${DataTable}

  CreditBureauFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./credit-bureau

  CalculateRateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./calculate-rate

  BrokerMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - !Sub states.${AWS::Region}.amazonaws.com
      Policies:
        - PolicyName: WriteItemToDataTable
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                Resource:
                  - !Sub ${DataTable.Arn}
        - PolicyName: UpdateItemInDataTable
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:UpdateItem
                Resource:
                  - !Sub ${DataTable.Arn}
        - PolicyName: GetBankItem
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                Resource:
                  - !Sub ${DataTable.Arn}
        - PolicyName: InvokeCreditBureauFunction
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !Sub ${CreditBureauFunction.Arn}
        - PolicyName: InvokeCalculateRateFunction
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !Sub ${CalculateRateFunction.Arn}

  BrokerStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: ./broker-machine.asl.json
      Role: !Sub ${BrokerMachineRole.Arn}
      DefinitionSubstitutions:
        DataTableName: !Sub ${DataTable}
        CreditBureauFunctionName: !Sub ${CreditBureauFunction}
        CalculateRateFunctionName: !Sub ${CalculateRateFunction}
      Tracing:
        Enabled: true

  BrokerAPIInvokeStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - !Sub apigateway.amazonaws.com
      Policies:
        - PolicyName: InvokeBrokerStateMachine
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - states:StartExecution
                Resource:
                  - !Sub ${BrokerStateMachine.Arn}

  BrokerAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub ${AWS::StackName}-api
      EndpointConfiguration:
        Types:
          - REGIONAL

  BrokerAPIEntryModel:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: !Sub ${BrokerAPI}
      ContentType: application/json
      Name: Entry
      Schema:
        $schema: http://json-schema.org/draft-04/schema#
        title: EntrySchema
        type: object
        properties:
          SSN:
            type: string
          amount:
            type: number
            minimum: 1
          term:
            type: number
        required:
          - SSN
          - amount
          - term
        additionalProperties: false

  BrokerAPIEntryValidator:
    Type: AWS::ApiGateway::RequestValidator
    Properties:
      RestApiId: !Sub ${BrokerAPI}
      ValidateRequestBody: true
      ValidateRequestParameters: true

  BrokerAPIEntryMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Sub ${BrokerAPI}
      ResourceId: !Sub ${BrokerAPI.RootResourceId}
      AuthorizationType: NONE
      HttpMethod: POST
      # Both the model and validator is required to enable request validation.
      RequestModels:
        application/json: !Sub ${BrokerAPIEntryModel}
      RequestValidatorId: !Sub ${BrokerAPIEntryValidator}
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Credentials: !Sub ${BrokerAPIInvokeStateMachineRole.Arn}
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:states:action/StartExecution"
        # 'RequestTemplates' section to massage the data before it is sent to a given service.
        # In our case, all the user has to provide is the request body, other parameters necessary to invoke the SFN are added by this mapping.
        RequestTemplates:
          application/json: !Sub >-
            {
              "input": "$util.escapeJavaScript($input.json('$'))",
              "stateMachineArn": "${BrokerStateMachine.Arn}",
              "name": "$context.requestId"
            }
        IntegrationResponses:
          - StatusCode: 200
            # By default, the 'executionArn' and 'startDate' is returned. Map the response from SFN the 'jobID' token.
            ResponseTemplates:
              "application/json": !Sub >-
                {
                  "id": "$context.requestId",
                }
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              "method.response.header.Access-Control-Allow-Origin": "'*'"
        PassthroughBehavior: NEVER
      MethodResponses:
        - StatusCode: 200
          # What kind of 'ResponseParameter' I'm able to specify within the 'IntegrationResponses' for a 'StatusCode' of 200
          ResponseParameters:
            "method.response.header.Access-Control-Allow-Origin": true
            "method.response.header.Access-Control-Allow-Methods": true
            "method.response.header.Access-Control-Allow-Headers": true

  BrokerAPIDeployment$TIMESTAMP$:
    Type: AWS::ApiGateway::Deployment
    # Required. Otherwise CFN will try to create a deployment that might not have any methods attached to it (CFN will throw an error).
    DependsOn:
      - BrokerAPIEntryMethod
    Properties:
      RestApiId: !Sub ${BrokerAPI}
      # This is how one would specify the macro if the `Properties` block required parsing.
      # This definition makes the macro scoped to this particular resource.
      # Fn::Transform:
      #   Name: APIGWDeploymentMacro

  BrokerAPIStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      StageName: dev
      RestApiId: !Sub ${BrokerAPI}
      DeploymentId: !Sub ${BrokerAPIDeployment$TIMESTAMP$}

Outputs:
  BrokerAPIEntryMethod:
    Value: !Sub https://${BrokerAPI}.execute-api.${AWS::Region}.amazonaws.com/${BrokerAPIStage}

  BrokerStateMachineArn:
    Value: !Sub ${BrokerStateMachine.Arn}
# {
#   "SSN": "123-123",
#   "amount": 30,
#   "term": 30,
#   "credit": {
#     "score": 481,
#     "history": 18
#   },
#   "banks": {
#     "bankName": [
#       "Universal",
#       "PawnShop",
#       "Premium"
#     ]
#   },
#   "quotes": [
#     {
#       "rate": []
#     },
#     {
#       "rate": [
#         8.213301439898098
#       ]
#     },
#     {
#       "rate": []
#     }
#   ]
# }

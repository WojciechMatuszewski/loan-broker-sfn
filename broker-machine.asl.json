{
  "StartAt": "Save loan request",
  "States": {
    "Save loan request": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "${DataTableName}",
        "Item": {
          "pk": {
            "S.$": "States.Format('LOAN#{}', $$.Execution.Name)"
          },
          "status": {
            "S": "STARTING"
          },
          "updatedAt": {
            "S.$": "$$.State.EnteredTime"
          },
          "createdAt": {
            "S.$": "$$.Execution.StartTime"
          }
        }
      },
      "ResultPath": null,
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 5,
          "MaxAttempts": 2,
          "BackoffRate": 1.5
        }
      ],
      "Next": "Artificial Delay"
    },

    "Artificial Delay": {
      "Type": "Wait",
      "Seconds": 1,
      "Next": "Update status (consulting bureau)"
    },
    "Update status (consulting bureau)": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Parameters": {
        "TableName": "${DataTableName}",
        "Key": {
          "pk": {
            "S.$": "States.Format('LOAN#{}', $$.Execution.Name)"
          }
        },
        "UpdateExpression": "set #status = :newStatus",
        "ConditionExpression": "attribute_exists(#pk)",
        "ExpressionAttributeValues": {
          ":newStatus": "CONSULTING_BUREAU"
        },
        "ExpressionAttributeNames": {
          "#pk": "pk",
          "#status": "status"
        }
      },
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 5,
          "MaxAttempts": 2,
          "BackoffRate": 1.5
        }
      ],
      "ResultPath": null,
      "Next": "Consult Credit Bureau"
    },

    "Consult Credit Bureau": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "${CreditBureauFunctionName}",
        "Payload.$": "$"
      },
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 5,
          "MaxAttempts": 2,
          "BackoffRate": 1.5
        }
      ],
      "Next": "Update status (getting quotes)",
      "ResultSelector": {
        "score.$": "$.Payload.score",
        "history.$": "$.Payload.history"
      },
      "ResultPath": "$.credit"
    },
    "Update status (getting quotes)": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Parameters": {
        "TableName": "${DataTableName}",
        "Key": {
          "pk": {
            "S.$": "States.Format('LOAN#{}', $$.Execution.Name)"
          }
        },
        "UpdateExpression": "set #status = :newStatus",
        "ConditionExpression": "attribute_exists(#pk)",
        "ExpressionAttributeValues": {
          ":newStatus": "GETTING_QUOTES"
        },
        "ExpressionAttributeNames": {
          "#pk": "pk",
          "#status": "status"
        }
      },
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 5,
          "MaxAttempts": 2,
          "BackoffRate": 1.5
        }
      ],
      "ResultPath": null,
      "Next": "Get bank names"
    },
    "Get bank names": {
      "Type": "Pass",
      "Parameters": {
        "bankName.$": "States.Array('Universal', 'PawnShop', 'Premium')"
      },
      "ResultPath": "$.banks",
      "Next": "Get quotes"
    },
    "Get quotes": {
      "Type": "Map",
      "ItemsPath": "$.banks.bankName",
      "Parameters": {
        "amount.$": "$.amount",
        "term.$": "$.term",
        "credit.$": "$.credit",
        "bankName.$": "$$.Map.Item.Value"
      },
      "End": true,
      "Iterator": {
        "StartAt": "Mock",
        "States": {
          "Mock": {
            "Type": "Pass",
            "End": true
          }
        }
      }
    }
  }
}
